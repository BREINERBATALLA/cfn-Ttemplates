Description: 'VPC Config With: EC2 Instance, Subnets, NatGateway, IGateway, SecurityGroups'

Parameters:
  TypeVPC:
    Description: Choose the type of VPC 
    Type: String
    Default: default
    AllowedValues:
      - dedicated
      - default

  Environment:
    Description: Choose environment where you gonna deploy
    Type: String
    Default: dev
    AllowedValues:
    - test
    - dev
    - prod

Mappings:
  EnvironmentMap:
    dev:
      InstanceType: t2.micro
      ImageId: ami-0b5eea76982371e91
    prod:
      InstanceType: t2.micro
      ImageId: ami-0b5eea76982371e91
    test:
     InstanceType: m3.medium
     ImageId: ami-0b5eea76982371e91

Conditions:
  CreateEC2: !Equals [!Ref Environment, 'dev']

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      InstanceTenancy: 
        Ref: TypeVPC

  MyInstanceEC2:
    Type: AWS::EC2::Instance
    Condition: CreateEC2
    DependsOn: PublicSubnet
    Properties:
      ImageId: !FindInMap 
        - EnvironmentMap
        - !Ref Environment
        - ImageId
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      InstanceType: !FindInMap 
        - EnvironmentMap
        - !Ref Environment
        - InstanceType
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: 
        - !GetAtt SecurityGroup.GroupId


  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.0.0/24'
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: true

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
      MapPublicIpOnLaunch: false

  SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: Allowed Http access
            GroupName: Example
            VpcId: !Ref MyVPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0

  Outputs:
  VpcId:
    Description: Value of Id
    Value: 
      Ref: MyVPC
     

      
      

